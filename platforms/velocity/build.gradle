plugins {
    id("java")
    id("com.github.johnrengelman.shadow").version("7.1.2")
}

repositories {
    maven {
        setName("elytrium-repo")
        setUrl("https://maven.elytrium.net/repo/")
    }
    maven {
        setName("papermc-repo")
        setUrl("https://papermc.io/repo/repository/maven-public/")
    }
}

dependencies {
    compileOnly("com.velocitypowered:velocity-api:$velocityVersion")
    annotationProcessor("com.velocitypowered:velocity-api:$velocityVersion")

    implementation(project(":api"))
}

shadowJar {
    getArchiveClassifier().set("")
    setArchiveFileName("distributify-${version}.${extension}")

    exclude("META-INF/versions/**")
    //exclude("net/kyori/**")


    relocate("redis.client", "ru.meproject.distributify.driver")
    /*relocate("net.elytrium.fastprepare", "net.elytrium.limboapi.thirdparty.fastprepare")
    relocate("net.elytrium.commons.velocity", "net.elytrium.limboapi.thirdparty.commons.velocity")
    relocate("net.elytrium.commons.kyori", "net.elytrium.limboapi.thirdparty.commons.kyori")
    relocate("net.elytrium.commons.config", "net.elytrium.limboapi.thirdparty.commons.config")*/

}

sourceSets.main.getJava().srcDir(
        getTasks().register("generateTemplates", Copy) {
            task -> {
                String version = getVersion().contains("-") ? "${getVersion()} (git-${getCurrentShortRevision()})" : getVersion()
                task.getInputs().properties("version": version)
                task.from(file("src/main/templates")).into(getLayout().getBuildDirectory().dir("generated/sources/templates"))
                task.expand("version": version)
            }
        }.map {
            it.getOutputs()
        }
)


assemble.dependsOn(shadowJar)